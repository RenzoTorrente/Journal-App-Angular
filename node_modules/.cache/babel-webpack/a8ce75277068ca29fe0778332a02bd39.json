{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let ProjectsService = /*#__PURE__*/(() => {\n  class ProjectsService {\n    constructor() {\n      this.projects = [];\n    }\n\n    getProject() {\n      if (localStorage.getItem('projects') !== null) {\n        this.projects = JSON.parse(localStorage.getItem('projects'));\n      } else {\n        this.projects = [];\n      }\n\n      return this.projects;\n    }\n\n    addProjects(project) {\n      this.projects.push(project);\n      let projects = [];\n\n      if (localStorage.getItem('projects') === null) {\n        projects = [];\n        projects.push(project);\n        localStorage.setItem('projects', JSON.stringify(projects));\n      } else {\n        projects = JSON.parse(localStorage.getItem(\"projects\"));\n        projects.push(project);\n        localStorage.setItem('projects', JSON.stringify(projects));\n      }\n    }\n\n    getProjectById(id) {\n      let projects = JSON.parse(localStorage.getItem(\"projects\"));\n      let filter = projects.filter(elem => elem.id === id);\n\n      if (filter !== null) {\n        return filter;\n      } else {\n        return false;\n      }\n    }\n\n    deleteproject(project) {\n      let projects = JSON.parse(localStorage.getItem(\"projects\"));\n      let filter = projects.filter(elem => project.id !== elem.id);\n      localStorage.setItem('projects', JSON.stringify(filter));\n    }\n\n    UpdateProject(project) {\n      let projects = JSON.parse(localStorage.getItem(\"projects\"));\n      let cleanprojects = projects.filter(elem => project.id !== elem.id);\n      cleanprojects.push(project);\n      localStorage.setItem('projects', JSON.stringify(cleanprojects));\n    }\n\n  }\n\n  ProjectsService.ɵfac = function ProjectsService_Factory(t) {\n    return new (t || ProjectsService)();\n  };\n\n  ProjectsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProjectsService,\n    factory: ProjectsService.ɵfac,\n    providedIn: 'root'\n  });\n  return ProjectsService;\n})();","map":null,"metadata":{},"sourceType":"module"}